package test;

import java.util.Date;
import java.util.List;

import repositories.*;
import tables.*;

public class InitialTest {

	public static void main(String[] args) {

		UsersDao usersDao = new UsersDao();
		TerminDAO terminDao = new TerminDAO();
		ResourcesDAO resourcesDao = new ResourcesDAO();
		QuestionDAO questionDao = new QuestionDAO();
		ExaminationCardDAO examinationCardDao = new ExaminationCardDAO();
		PositionsDAO positionDao = new PositionsDAO();
		PermissionDAO permissionDao = new PermissionDAO();
		// User user = new User("Ramesh", "Fadatare", new Date(), "terh@javaguides.com",
		// "12345");
		// User user1 = new User("Emil", "Emil", new Date(), "test@test.test", "54321");

		// Position position = new Position("Egzaminowany", null);
		Position position1 = new Position("Egzaminator", null);
		Position position2 = new Position("Pracownik", null);

		/*
		 * user.addPosition(position); user.addPosition(position2);
		 * user1.addPosition(position1);
		 * 
		 * usersDao.saveUser(user1); usersDao.saveUser(user);
		 */
		Resource resource = new Resource("ExamCard");
		Question q;
		for (int i = 0; i < 20; i++) {
			q = new Question();
			q.setQuestion(Integer.toString(i));
			q.setResource(resource);
			questionDao.saveQuestion(q);
		}

		List<Question> questions = questionDao.getTenRandomQuestions();
		Operation operation = new Operation("Kopiowanie", 1);
		Position position = new Position("Egzaminowany", null);
		Permission permission = new Permission(position, resource, operation);
		permissionDao.savePermission(permission);
		Term term = new Term(new Year(2020), new Month(6), new Day(12), new Hour(12, 30));
		terminDao.saveTermin(term);
		position = new Position("Egzaminator", null);
		User user = new User("Ramesh", "Fadatare", new Date(), "terh@javaguides.com", "12345");
		User user1 = new User("Emil", "Emil", new Date(), "test@test.test", "54321");
		user.addPosition(position);
		user.addPosition(position);
		user1.addPosition(position);
		usersDao.saveUser(user1);
		usersDao.saveUser(user);

		ExaminationCard examinationCard = new ExaminationCard("B", "Brak", "Pozytywny", term, resource, user, user1);
		examinationCardDao.saveExaminationCard(examinationCard);

		/*
		 * Session session = HibernateUtil.getSessionFactory().openSession();
		 * session.beginTransaction(); ExaminationCard newExamCard =
		 * session.get(ExaminationCard.class, examinationCard.getExamCardId());
		 * System.out.println(newExamCard.getEgzaminowany());
		 * session.getTransaction().commit();
		 */
		List<ExaminationCard> examinationCards = examinationCardDao.getExaminationCard();
		user = usersDao.getUserById(1);
		System.out.println(user);
		/*
		 * for(ExaminationCard e : examinationCards) {
		 * System.out.println(e.getExaminer().toString()); } for(Question q1 :
		 * questions) { System.out.println(q1.toString()); }
		 */

	}

}
