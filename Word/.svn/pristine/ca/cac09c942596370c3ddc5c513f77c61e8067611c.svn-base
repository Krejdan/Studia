package application;

import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;

import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.application.Platform;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.ToggleGroup;
import javafx.scene.image.ImageView;
import javafx.stage.Stage;
import javafx.util.Duration;

import tables.Question;
import repositories.QuestionDAO;

public class TheoreticalExamController implements Initializable {

    @FXML
    private Label questionText;

    @FXML
    private Label questionNumber;
    
    @FXML
    private ImageView questionImage;

    @FXML
    private RadioButton answerButton1;

    @FXML
    private ToggleGroup answerButtonsGroup;

    @FXML
    private RadioButton answerButton2;

    @FXML
    private RadioButton answerButton3;

    @FXML
    private RadioButton answerButton4;

    @FXML
    private Button answerQuestionButton;

    @FXML
    private Label timeLeftTimer;

    @FXML
    private Button finishExamButton;
    
    
    private final static int examTime = 120;
    private Timeline timer;
    private int secondsLeft;
    private int currentQuestion;
    private int numberOfQuestions;
    private List<Question> questions = new ArrayList<>();

    @FXML
    void answerQuestionClicked(ActionEvent event) {

		if(currentQuestion == numberOfQuestions-1) endExam();
		System.out.println(currentQuestion);
		//if(answerButtonsGroup.getSelectedToggle() == null)
    	//	AlertBox.display("B³¹d", "Nale¿y zaznaczyæ odpowiedŸ");
		//else {
    		answerButtonsGroup.selectToggle(null);
    		questionNumber.setText(String.format("%d/%d", currentQuestion+2, numberOfQuestions));
    		questionText.setText(questions.get(++currentQuestion).getQuestion());
		//}
    }
    
    @FXML
    void finishClicked(ActionEvent event) {
    	endExam();
    }
    
    private void endExam()
    {
    	AlertBox.display("", "Koniec egzaminu!");
    	
		Parent examResultView;
		try {
			examResultView = FXMLLoader.load(getClass().getResource("LoginScreen.fxml"));
			Scene examResultScene = new Scene(examResultView);
			Stage window = (Stage) questionText.getScene().getWindow();

			window.setScene(examResultScene);
			window.show();
		} catch (IOException e) {
			e.printStackTrace();
		}

    }
//tutaj komentarz testowy sVN

	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		secondsLeft = examTime;
		currentQuestion = 0;
		numberOfQuestions = 10;
		
		//Platform.runLater(()->{
			QuestionDAO questionDao = new QuestionDAO();
			questions = questionDao.getTenRandomQuestions();
		//});
		questionText.setText(questions.get(0).getQuestion());
		questionNumber.setText(String.format("%d/%d", currentQuestion+1, numberOfQuestions));
		
		timer = new Timeline(new KeyFrame(Duration.seconds(0), event ->  { 
			timeLeftTimer.setText(String.format("%d:%02d", secondsLeft / 60, secondsLeft % 60));
			secondsLeft--;
		}), new KeyFrame(Duration.seconds(1)));
		timer.setCycleCount(examTime+1);
		timer.setOnFinished(e -> Platform.runLater(() -> {
				endExam();
			}));
		timer.play();
		

	}

}
